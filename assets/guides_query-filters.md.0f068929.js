import{l as e,f as n,G as t}from"./framework.dc3bd9a4.js";const a='{"title":"Query Filters","description":"","frontmatter":{"id":"query-filters","title":"Query Filters"},"relativePath":"guides/query-filters.md","lastUpdated":1610601521825}',s={},o=t('<p>Some methods within Vu Query accept a <code>QueryFilters</code> object. A query filter is an object with certain conditions to match a query with:</p><div class="language-js"><pre><code><span class="token comment">// Cancel all queries</span>\n<span class="token keyword">await</span> queryClient<span class="token punctuation">.</span><span class="token function">cancelQueries</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Remove all inactive queries</span>\nqueryClient<span class="token punctuation">.</span><span class="token function">removeQueries</span><span class="token punctuation">(</span><span class="token string">&#39;posts&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> inactive<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Refetch all active queries</span>\n<span class="token keyword">await</span> queryClient<span class="token punctuation">.</span><span class="token function">refetchQueries</span><span class="token punctuation">(</span><span class="token punctuation">{</span> active<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Refetch all active queries that begin with `post` in the key</span>\n<span class="token keyword">await</span> queryClient<span class="token punctuation">.</span><span class="token function">refetchQueries</span><span class="token punctuation">(</span><span class="token string">&#39;posts&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> active<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>A query filter object supports the following properties:</p><ul><li><code>exact?: boolean</code><ul><li>If you don&#39;t want to search queries inclusively by query key, you can pass the <code>exact: true</code> option to return only the query with the exact query key you have passed.</li></ul></li><li><code>active?: boolean</code><ul><li>When set to <code>true</code> it will match active queries.</li><li>When set to <code>false</code> it will match inactive queries.</li></ul></li><li><code>inactive?: boolean</code><ul><li>When set to <code>true</code> it will match inactive queries.</li><li>When set to <code>false</code> it will match active queries.</li></ul></li><li><code>stale?: boolean</code><ul><li>When set to <code>true</code> it will match stale queries.</li><li>When set to <code>false</code> it will match fresh queries.</li></ul></li><li><code>fetching?: boolean</code><ul><li>When set to <code>true</code> it will match queries that are currently fetching.</li><li>When set to <code>false</code> it will match queries that are not fetching.</li></ul></li><li><code>predicate?: (query: Query) =&gt; boolean</code><ul><li>This predicate function will be called for every single query in the cache and be expected to return truthy for queries that are <code>found</code>.</li></ul></li><li><code>queryKey?: QueryKey</code><ul><li>Set this property to define a query key to match on.</li></ul></li></ul>',4);s.render=function(t,a,s,i,l,c){return e(),n("div",null,[o])};export default s;export{a as __pageData};
