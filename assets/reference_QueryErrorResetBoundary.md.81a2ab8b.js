import{l as n,f as s,G as a}from"./framework.dc3bd9a4.js";const t='{"title":"QueryErrorResetBoundary","description":"","frontmatter":{"id":"QueryErrorResetBoundary","title":"QueryErrorResetBoundary"},"relativePath":"reference/QueryErrorResetBoundary.md","lastUpdated":1610419945157}',o={},p=a('<p>When using <strong>suspense</strong> or <strong>useErrorBoundaries</strong> in your queries, you need a way to let queries know that you want to try again when re-rendering after some error occured. With the <code>QueryErrorResetBoundary</code> component you can reset any query errors within the boundaries of the component.</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> QueryErrorResetBoundary <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-query&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ErrorBoundary <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-error-boundary&#39;</span>\n\n<span class="token keyword">const</span> App<span class="token operator">:</span> Vue<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>QueryErrorResetBoundary<span class="token operator">&gt;</span>\n    <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> reset <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>ErrorBoundary\n        onReset<span class="token operator">=</span><span class="token punctuation">{</span>reset<span class="token punctuation">}</span>\n        fallbackRender<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> resetErrorBoundary <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n          <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\n            There was an error<span class="token operator">!</span>\n            <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resetErrorBoundary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>Try again<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>\n          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>Page <span class="token operator">/</span><span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>ErrorBoundary<span class="token operator">&gt;</span>\n    <span class="token punctuation">)</span><span class="token punctuation">}</span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>QueryErrorResetBoundary<span class="token operator">&gt;</span>\n<span class="token punctuation">)</span>\n</code></pre></div>',2);o.render=function(a,t,o,e,r,c){return n(),s("div",null,[p])};export default o;export{t as __pageData};
