import{l as a,f as n,G as e}from"./framework.dc3bd9a4.js";const t='{"title":"MutationCache","description":"","frontmatter":{"id":"MutationCache","title":"MutationCache"},"headers":[{"level":2,"title":"mutationCache.getAll","slug":"mutationcache-getall"},{"level":2,"title":"mutationCache.subscribe","slug":"mutationcache-subscribe"},{"level":2,"title":"mutationCache.clear","slug":"mutationcache-clear"}],"relativePath":"reference/MutationCache.md","lastUpdated":1610801842881}',s={},o=e('<p>The <code>MutationCache</code> is the storage for mutations.</p><p><strong>Normally, you will not interact with the MutationCache directly and instead use the <code>QueryClient</code>.</strong></p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> MutationCache <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vu-query&#39;</span>\n\n<span class="token keyword">const</span> mutationCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p>Its available methods are:</p><ul><li><a href="#mutationcachegetall"><code>getAll</code></a></li><li><a href="#mutationcachesubscribe"><code>subscribe</code></a></li><li><a href="#mutationcacheclear"><code>clear</code></a></li></ul><h2 id="mutationcache-getall"><a class="header-anchor" href="#mutationcache-getall" aria-hidden="true">#</a> <code>mutationCache.getAll</code></h2><p><code>getAll</code> returns all mutations within the cache.</p><blockquote><p>Note: This is not typically needed for most applications, but can come in handy when needing more information about a mutation in rare scenarios</p></blockquote><div class="language-js"><pre><code><span class="token keyword">const</span> mutations <span class="token operator">=</span> mutationCache<span class="token punctuation">.</span><span class="token function">getAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><strong>Returns</strong></p><ul><li><code>Mutation[]</code><ul><li>Mutation instances from the cache</li></ul></li></ul><h2 id="mutationcache-subscribe"><a class="header-anchor" href="#mutationcache-subscribe" aria-hidden="true">#</a> <code>mutationCache.subscribe</code></h2><p>The <code>subscribe</code> method can be used to subscribe to the mutation cache as a whole and be informed of safe/known updates to the cache like mutation states changing or mutations being updated, added or removed.</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token parameter">mutation</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mutation<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> unsubscribe <span class="token operator">=</span> mutationCache<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>\n</code></pre></div><p><strong>Options</strong></p><ul><li><code>callback: (mutation?: Mutation) =&gt; void</code><ul><li>This function will be called with the mutation cache any time it is updated.</li></ul></li></ul><p><strong>Returns</strong></p><ul><li><code>unsubscribe: Function =&gt; void</code><ul><li>This function will unsubscribe the callback from the mutation cache.</li></ul></li></ul><h2 id="mutationcache-clear"><a class="header-anchor" href="#mutationcache-clear" aria-hidden="true">#</a> <code>mutationCache.clear</code></h2><p>The <code>clear</code> method can be used to clear the cache entirely and start fresh.</p><div class="language-js"><pre><code>mutationCache<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div>',21);s.render=function(e,t,s,c,i,l){return a(),n("div",null,[o])};export default s;export{t as __pageData};
