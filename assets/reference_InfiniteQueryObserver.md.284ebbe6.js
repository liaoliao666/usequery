import{l as n,f as s,G as a}from"./framework.dc3bd9a4.js";const e='{"title":"InfiniteQueryObserver","description":"","frontmatter":{"id":"InfiniteQueryObserver","title":"InfiniteQueryObserver"},"headers":[{"level":2,"title":"InfiniteQueryObserver","slug":"infinitequeryobserver"}],"relativePath":"reference/InfiniteQueryObserver.md","lastUpdated":1611415935073}',t={},p=a('<h2 id="infinitequeryobserver"><a class="header-anchor" href="#infinitequeryobserver" aria-hidden="true">#</a> <code>InfiniteQueryObserver</code></h2><p>The <code>InfiniteQueryObserver</code> can be used to observe and switch between infinite queries.</p><div class="language-js"><pre><code><span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InfiniteQueryObserver</span><span class="token punctuation">(</span>queryClient<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  queryKey<span class="token operator">:</span> <span class="token string">&#39;posts&#39;</span><span class="token punctuation">,</span>\n  queryFn<span class="token operator">:</span> fetchPosts<span class="token punctuation">,</span>\n  <span class="token function-variable function">getNextPageParam</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">lastPage<span class="token punctuation">,</span> allPages</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> lastPage<span class="token punctuation">.</span>nextCursor<span class="token punctuation">,</span>\n  <span class="token function-variable function">getPreviousPageParam</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">firstPage<span class="token punctuation">,</span> allPages</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> firstPage<span class="token punctuation">.</span>prevCursor<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> unsubscribe <span class="token operator">=</span> observer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>\n  <span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p><strong>Options</strong></p><p>The options for the <code>InfiniteQueryObserver</code> are exactly the same as those of <a href="#useinfinitequery"><code>useInfiniteQuery</code></a>.</p>',5);t.render=function(a,e,t,o,r,c){return n(),s("div",null,[p])};export default t;export{e as __pageData};
