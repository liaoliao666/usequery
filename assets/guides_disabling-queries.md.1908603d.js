import{l as n,f as s,G as a}from"./framework.dc3bd9a4.js";const t='{"title":"Disabling/Pausing Queries","description":"","frontmatter":{"id":"disabling-queries","title":"Disabling/Pausing Queries"},"relativePath":"guides/disabling-queries.md","lastUpdated":1610702694508}',o={},p=a('<p>If you ever want to disable a query from automatically running, you can use the <code>enabled = false</code> option.</p><p>When <code>enabled</code> is <code>false</code>:</p><ul><li>If the query has cached data <ul><li>The query will be initialized in the <code>status === &#39;success&#39;</code> or <code>isSuccess</code> state.</li></ul></li><li>If the query does not have cached data <ul><li>The query will start in the <code>status === &#39;idle&#39;</code> or <code>isIdle</code> state.</li></ul></li><li>The query will not automatically fetch on mount.</li><li>The query will not automatically refetch in the background when new instances mount or new instances appearing</li><li>The query will ignore query client <code>invalidateQueries</code> and <code>refetchQueries</code> calls that would normally result in the query refetching.</li><li><code>refetch</code> can be used to manually trigger the query to fetch.</li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Todos</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span>\n    isIdle<span class="token punctuation">,</span>\n    isLoading<span class="token punctuation">,</span>\n    isError<span class="token punctuation">,</span>\n    data<span class="token punctuation">,</span>\n    error<span class="token punctuation">,</span>\n    refetch<span class="token punctuation">,</span>\n    isFetching<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useQuery</span><span class="token punctuation">(</span><span class="token string">&#39;todos&#39;</span><span class="token punctuation">,</span> fetchTodoList<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    enabled<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">refetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>Fetch Todos<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n\n      <span class="token punctuation">{</span>isIdle <span class="token operator">?</span> <span class="token punctuation">(</span>\n        <span class="token string">&#39;Not ready...&#39;</span>\n      <span class="token punctuation">)</span> <span class="token operator">:</span> isLoading <span class="token operator">?</span> <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>Loading<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\n      <span class="token punctuation">)</span> <span class="token operator">:</span> isError <span class="token operator">?</span> <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>Error<span class="token operator">:</span> <span class="token punctuation">{</span>error<span class="token punctuation">.</span>message<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>\n      <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span><span class="token operator">&gt;</span>\n          <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>\n            <span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">todo</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n              <span class="token operator">&lt;</span>li key<span class="token operator">=</span><span class="token punctuation">{</span>todo<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>todo<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n            <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>\n          <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>isFetching <span class="token operator">?</span> <span class="token string">&#39;Fetching...&#39;</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>\n      <span class="token punctuation">)</span><span class="token punctuation">}</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',4);o.render=function(a,t,o,e,c,l){return n(),s("div",null,[p])};export default o;export{t as __pageData};
